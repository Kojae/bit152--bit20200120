
DROP TABLE VARIABLE_EXPENDITURE CASCADE CONSTRAINTS;
DROP TABLE VARIABLE_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE TEST_TYPE CASCADE CONSTRAINTS;
DROP TABLE TEST CASCADE CONSTRAINTS;
DROP TABLE TEMPORARY CASCADE CONSTRAINTS;
DROP TABLE SUPPLIER_EQUIPMENT CASCADE CONSTRAINTS;
DROP TABLE SUPPLIER CASCADE CONSTRAINTS;
DROP TABLE STUDENT_LECTURE_LIST CASCADE CONSTRAINTS;
DROP TABLE SEASON CASCADE CONSTRAINTS;
DROP TABLE RECORD CASCADE CONSTRAINTS;
DROP TABLE POSTS CASCADE CONSTRAINTS;
DROP TABLE PAYMENT_TYPE CASCADE CONSTRAINTS;
DROP TABLE PAYMENT_SERVICE CASCADE CONSTRAINTS;
DROP TABLE PAYMENT_METHOD CASCADE CONSTRAINTS;
DROP TABLE LECTURE_TIMETABLE CASCADE CONSTRAINTS;
DROP TABLE LECTURE_SUBJECT CASCADE CONSTRAINTS;
DROP TABLE LECTURESTATE CASCADE CONSTRAINTS;
DROP TABLE LECTUREROOM CASCADE CONSTRAINTS;
DROP TABLE LECTURE CASCADE CONSTRAINTS;
DROP TABLE INQUIRY CASCADE CONSTRAINTS;
DROP TABLE FIXED_EXPENDITURE CASCADE CONSTRAINTS;
DROP TABLE FIXED_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE EXPENDITURE CASCADE CONSTRAINTS;
DROP TABLE CAREER CASCADE CONSTRAINTS;
DROP TABLE CALENDAR_TYPE CASCADE CONSTRAINTS;
DROP TABLE CALENDAR CASCADE CONSTRAINTS;
DROP TABLE BOARD_GROUP CASCADE CONSTRAINTS;
DROP TABLE BOARD_COMMENT CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE AUTHORITY CASCADE CONSTRAINTS;
DROP TABLE ATTENDANCE_STATE CASCADE CONSTRAINTS;
DROP TABLE ATTENDANCE CASCADE CONSTRAINTS;
DROP TABLE APPROVAL_TYPE CASCADE CONSTRAINTS;
DROP TABLE APPROVAL_STATE CASCADE CONSTRAINTS;
DROP TABLE APPROVAL CASCADE CONSTRAINTS;
DROP TABLE APPLICATION_FORM CASCADE CONSTRAINTS;
DROP TABLE ADMIN CASCADE CONSTRAINTS;
DROP TABLE ACADEMY_USER CASCADE CONSTRAINTS;
DROP TABLE ACADEMY_PAYMENT CASCADE CONSTRAINTS;
DROP TABLE ACADEMIC_TYPE CASCADE CONSTRAINTS;

/* 시퀀스 삭제 */

DROP SEQUENCE seq_board_group ;
DROP SEQUENCE seq_board;
DROP SEQUENCE seq_posts;
DROP SEQUENCE seq_temporary;
DROP SEQUENCE seq_board_comment;
DROP SEQUENCE recordSeq;
DROP SEQUENCE payment_method_seq;
DROP SEQUENCE income_seq;
DROP SEQUENCE supplier_seq;
DROP SEQUENCE equipment_seq;
DROP SEQUENCE variable_category_seq;
DROP SEQUENCE fixed_category_seq;
DROP SEQUENCE expenditure_seq;




/* 결제수단 시퀀스 생성 */
CREATE SEQUENCE payment_method_seq START WITH 0 MINVALUE 0 MAXVALUE 100 INCREMENT BY 1 NOCACHE;

/* 수입 시퀀스 생성 */
CREATE SEQUENCE income_seq START WITH 0 MINVALUE 0 MAXVALUE 1000 INCREMENT BY 1 NOCACHE;

/* 구매처 시퀀스 생성 */
CREATE SEQUENCE supplier_seq START WITH 0 MINVALUE 0 MAXVALUE 1000 INCREMENT BY 1 NOCACHE;

/* 비품(구매처별제품) 시퀀스 생성 */
CREATE SEQUENCE equipment_seq START WITH 0 MINVALUE 0 MAXVALUE 1000 INCREMENT BY 1 NOCACHE;

/* 변동지출 카테고리 시퀀스 생성 */
CREATE SEQUENCE variable_category_seq START WITH 100 MINVALUE 100 MAXVALUE 1000 INCREMENT BY 1 NOCACHE;

/* 고정지출 카테고리 시퀀스 생성 */
CREATE SEQUENCE fixed_category_seq START WITH 0 MINVALUE 0 MAXVALUE 1000 INCREMENT BY 1 NOCACHE;

/* 지출 시퀀스 생성 */
CREATE SEQUENCE expenditure_seq START WITH 0 MINVALUE 0 MAXVALUE 1000 INCREMENT BY 1 NOCACHE;


/* 사용자 */
CREATE TABLE ACADEMY_USER (
	USER_ID VARCHAR2(20) NOT NULL, /* 사용자ID (학생은 학번) */
	AUTHORITY_CODE VARCHAR2(20) NOT NULL, /* 사용자권한번호 */
	ACADEMIC_TYPE_CODE VARCHAR2(20),/* 과 분류 번호 */
	USER_PASSWORD VARCHAR2(200), /* 사용자 비밀번호 */
	USER_NAME VARCHAR2(20) , /* 사용자 이름 */
	USER_TEL VARCHAR2(20), /* 사용자 연락처 */
	USER_PARENT_TEL VARCHAR2(20), /* 사용자 부모연락처 (학생, nullable) */
	USER_BIRTH DATE, /* 사용자 생년월일 */
	USER_EMAIL VARCHAR2(20), /* 사용자 이메일 */
	USER_ADDRESS VARCHAR2(200), /* 사용자 주소 */
	USER_IMAGE VARCHAR2(200), /* 사용자 이미지 */
	USER_REGISTRATION DATE, /* 사용자 등록일 ( 강사 = 입사일, 학생 = 학원등록일) */
	USER_REMARK VARCHAR2(200), /* 사용자 비고 (특이사항,메모) */
	SCHOOL_NAME VARCHAR2(20) /* 학교명 */
);

CREATE UNIQUE INDEX PK_ACADEMY_USER
	ON ACADEMY_USER (
		USER_ID ASC
	); 



ALTER TABLE ACADEMY_USER
	ADD
		CONSTRAINT PK_ACADEMY_USER
		PRIMARY KEY (
			USER_ID
		);


/* 사용자 권한 */
CREATE TABLE AUTHORITY (
	AUTHORITY_CODE VARCHAR2(20) NOT NULL, /* 사용자권한번호 */
	AUTHORITY_NAME VARCHAR2(10) /* 권한 명(학생/강사/원장) */
);

CREATE UNIQUE INDEX PK_AUTHORITY
	ON AUTHORITY (
		AUTHORITY_CODE ASC
	);

ALTER TABLE AUTHORITY
	ADD
		CONSTRAINT PK_AUTHORITY
		PRIMARY KEY (
			AUTHORITY_CODE
		);

/* 성적 */
CREATE TABLE RECORD 
(
  RECORD_NO VARCHAR2(20 BYTE) NOT NULL 
, USER_ID VARCHAR2(20 BYTE) NOT NULL 
, TEST_NO VARCHAR2(20 BYTE) NOT NULL 
, KOREAN_LANGUAGE NUMBER 
, MATH NUMBER 
, ENGLISH NUMBER 
, SOCIAL NUMBER 
, SCIENCE NUMBER 
, KOREAN_HISTORY NUMBER 
, SUM VARCHAR2(20 BYTE) 
, AGE VARCHAR2(20 BYTE) 
) 
LOGGING 
TABLESPACE USERS 
PCTFREE 10 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  BUFFER_POOL DEFAULT 
) 
NOCOMPRESS 
NOPARALLEL;

CREATE UNIQUE INDEX PK_RECORD ON RECORD (RECORD_NO ASC) 
LOGGING 
TABLESPACE USERS 
PCTFREE 10 
INITRANS 2 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

ALTER TABLE RECORD
ADD CONSTRAINT PK_RECORD PRIMARY KEY 
(
  RECORD_NO 
)
USING INDEX ROOT.PK_RECORD
ENABLE;

ALTER TABLE RECORD
ADD CONSTRAINT FK_ACADEMY_USER_TO_RD FOREIGN KEY
(
  USER_ID 
)
REFERENCES ACADEMY_USER
(
  USER_ID 
)
ON DELETE CASCADE ENABLE;

/* 시험 */
CREATE TABLE TEST (
	TEST_NO VARCHAR2(20) NOT NULL, /* 시험번호 */
	TEST_KIND_CODE VARCHAR2(20) NOT NULL, /* 시험분류 코드 */
	TEST_START DATE NOT NULL, /* 시험시작 */
	TEST_FINISH DATE NOT NULL, /* 시험종료일 */
	TEST_NAME VARCHAR(200) NOT NULL
);

CREATE UNIQUE INDEX PK_TEST
	ON TEST (
		TEST_NO ASC
	);

ALTER TABLE TEST
	ADD
		CONSTRAINT PK_TEST
		PRIMARY KEY (
			TEST_NO
		);

/* 시험종류 */
CREATE TABLE TEST_TYPE (
	TEST_KIND_CODE VARCHAR2(20) NOT NULL, /* 시험분류코드 */
	TEST_KIND_NAME VARCHAR2(20) /* 시험분류명 (자체, 모의, 중간고사, 기말 등) */
);

CREATE UNIQUE INDEX PK_TEST_TYPE
	ON TEST_TYPE (
		TEST_KIND_CODE ASC
	);

ALTER TABLE TEST_TYPE
	ADD
		CONSTRAINT PK_TEST_TYPE
		PRIMARY KEY (
			TEST_KIND_CODE
		);

/* 일정분류 */
CREATE TABLE CALENDAR_TYPE (
	CALENDAR_SPACIFICATION_CODE VARCHAR2(20) NOT NULL, /* 일정분류코드 */
	CALENDAR_SPACIFICATION_NAME VARCHAR2(20) /* 일정분류내용 (스케줄, 일정) */
);

CREATE UNIQUE INDEX PK_CALENDAR_TYPE
	ON CALENDAR_TYPE (
		CALENDAR_SPACIFICATION_CODE ASC
	);

ALTER TABLE CALENDAR_TYPE
	ADD
		CONSTRAINT PK_CALENDAR_TYPE
		PRIMARY KEY (
			CALENDAR_SPACIFICATION_CODE
		);

/* 일정,스케줄 */
CREATE TABLE CALENDAR (
	CALENDAR_NO VARCHAR2(20) NOT NULL, /* 일정번호 */
	USER_ID VARCHAR2(20) NOT NULL, /* 사용자ID (학생은 학번) */
	CALENDAR_SPACIFICATION_CODE VARCHAR2(20), /* 일정분류코드 (스케줄, 일정) */
	CALENDAR_TITLE VARCHAR2(20), /* 일정제목      ( 1학기 중간고사) */
	CALENDAR_CONTENTS VARCHAR2(20), /* 일정내용      (ㅇㅇ학교 중간고사) */
	CALENDAR_START DATE, /* 일정시작일 (2020-05-28 00:00) */
	CALEDNAR_FINISH DATE /* 일정종료일  (2020-05-30 16:00) */
);

CREATE UNIQUE INDEX PK_CALENDAR
	ON CALENDAR (
		CALENDAR_NO ASC
	);

ALTER TABLE CALENDAR
	ADD
		CONSTRAINT PK_CALENDAR
		PRIMARY KEY (
			CALENDAR_NO
		);

/* 과 */
CREATE TABLE ACADEMIC_TYPE (
	ACADEMIC_TYPE_CODE VARCHAR2(20) NOT NULL, /* 과 분류 번호 */
	ACADEMIC_TYPE_NAME VARCHAR2(10) /* 과 분류 명 (고2이상 : 문과/이과) */
);

CREATE UNIQUE INDEX PK_ACADEMIC_TYPE
	ON ACADEMIC_TYPE (
		ACADEMIC_TYPE_CODE ASC
	);

ALTER TABLE ACADEMIC_TYPE
	ADD
		CONSTRAINT PK_ACADEMIC_TYPE
		PRIMARY KEY (
			ACADEMIC_TYPE_CODE
		);

/* 강의시즌 */
  CREATE TABLE "ROOT"."SEASON" 
   (	"SEASON_ID" VARCHAR2(20 BYTE), 
	"SEASON_NAME" VARCHAR2(20 BYTE), 
	"SEASON_START_DATE" DATE, 
	"SEASON_END_DATE" DATE, 
	"SEASON_START_TIME" VARCHAR2(20 BYTE), 
	"SEASON_END_TIME" VARCHAR2(20 BYTE)
   );

  CREATE UNIQUE INDEX "ROOT"."PK_SEASON" ON "ROOT"."SEASON" ("SEASON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

  ALTER TABLE "ROOT"."SEASON" ADD CONSTRAINT "PK_SEASON" PRIMARY KEY ("SEASON_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."SEASON" MODIFY ("SEASON_ID" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."SEASON" MODIFY ("SEASON_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."SEASON" MODIFY ("SEASON_START_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."SEASON" MODIFY ("SEASON_END_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."SEASON" MODIFY ("SEASON_START_TIME" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."SEASON" MODIFY ("SEASON_END_TIME" NOT NULL ENABLE);

/* 강의실 */
  CREATE TABLE "ROOT"."LECTUREROOM" 
   (	"LECTUREROOM_NO" NUMBER(5,0), 
	"STUDENT_GRADE" VARCHAR2(10 BYTE), 
	"CAPACITY" VARCHAR2(20 BYTE)
   );

 CREATE UNIQUE INDEX "ROOT"."PK_LECTUREROOM" ON "ROOT"."LECTUREROOM" ("LECTUREROOM_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

  ALTER TABLE "ROOT"."LECTUREROOM" ADD CONSTRAINT "PK_LECTUREROOM" PRIMARY KEY ("LECTUREROOM_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."LECTUREROOM" MODIFY ("LECTUREROOM_NO" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTUREROOM" MODIFY ("STUDENT_GRADE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTUREROOM" MODIFY ("CAPACITY" NOT NULL ENABLE);


/* 강의과목 */
  CREATE TABLE "ROOT"."LECTURE_SUBJECT" 
   (	"LECTURE_SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"LECTURE_SUBJECT_NAME" VARCHAR2(20 BYTE)
   );

  CREATE UNIQUE INDEX "ROOT"."PK_LECTURE_SUBJECT" ON "ROOT"."LECTURE_SUBJECT" ("LECTURE_SUBJECT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

  ALTER TABLE "ROOT"."LECTURE_SUBJECT" ADD CONSTRAINT "PK_LECTURE_SUBJECT" PRIMARY KEY ("LECTURE_SUBJECT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."LECTURE_SUBJECT" MODIFY ("LECTURE_SUBJECT_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE_SUBJECT" MODIFY ("LECTURE_SUBJECT_NAME" NOT NULL ENABLE);



/* 강의상태 */
  CREATE TABLE "ROOT"."LECTURESTATE" 
   (	"LECTURE_STATE_CODE" VARCHAR2(20 BYTE), 
	"LECTURE_STATE_NAME" VARCHAR2(20 BYTE)
   );

 CREATE UNIQUE INDEX "ROOT"."PK_LECTURESTATE" ON "ROOT"."LECTURESTATE" ("LECTURE_STATE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;


  ALTER TABLE "ROOT"."LECTURESTATE" ADD CONSTRAINT "PK_LECTURESTATE" PRIMARY KEY ("LECTURE_STATE_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."LECTURESTATE" MODIFY ("LECTURE_STATE_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURESTATE" MODIFY ("LECTURE_STATE_NAME" NOT NULL ENABLE);



/* 강의 */
  CREATE TABLE LECTURE
   (	"LECTURE_CODE" VARCHAR2(20 BYTE), 
	"USER_ID" VARCHAR2(20 BYTE), 
	"SEASON_ID" VARCHAR2(20 BYTE), 
	"LECTURE_SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"LECTUREROOM_NO" NUMBER(*,0), 
	"LECTURE_STATE_CODE" VARCHAR2(20 BYTE), 
	"LECTURE_NAME" VARCHAR2(100 BYTE), 
	"LECTURE_CONTENT" VARCHAR2(200 BYTE), 
	"LECTURE_REGISTER_DATE" DATE, 
	"LECTURE_COST" NUMBER(*,0)
   ) ;

  CREATE UNIQUE INDEX "ROOT"."PK_LECTURE" ON "ROOT"."LECTURE" ("LECTURE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "ROOT"."LECTURE" ADD CONSTRAINT "PK_LECTURE" PRIMARY KEY ("LECTURE_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."LECTURE" MODIFY ("LECTURE_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE" MODIFY ("USER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE" MODIFY ("SEASON_ID" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE" MODIFY ("LECTURE_SUBJECT_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE" MODIFY ("LECTUREROOM_NO" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE" MODIFY ("LECTURE_STATE_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE" MODIFY ("LECTURE_NAME" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE" MODIFY ("LECTURE_CONTENT" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE" MODIFY ("LECTURE_REGISTER_DATE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE" MODIFY ("LECTURE_COST" NOT NULL ENABLE);


  ALTER TABLE "ROOT"."LECTURE" ADD CONSTRAINT "FK_ACADEMY_USER_TO_LE" FOREIGN KEY ("USER_ID")
	  REFERENCES "ROOT"."ACADEMY_USER" ("USER_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "ROOT"."LECTURE" ADD CONSTRAINT "FK_LECTUREROOM_TO_LECTURE" FOREIGN KEY ("LECTUREROOM_NO")
	  REFERENCES "ROOT"."LECTUREROOM" ("LECTUREROOM_NO") ENABLE;
 
  ALTER TABLE "ROOT"."LECTURE" ADD CONSTRAINT "FK_LECTURESTATE_TO_LE" FOREIGN KEY ("LECTURE_STATE_CODE")
	  REFERENCES "ROOT"."LECTURESTATE" ("LECTURE_STATE_CODE") ENABLE;
 
  ALTER TABLE "ROOT"."LECTURE" ADD CONSTRAINT "FK_LECTURE_SUBJECT_TO_LE" FOREIGN KEY ("LECTURE_SUBJECT_CODE")
	  REFERENCES "ROOT"."LECTURE_SUBJECT" ("LECTURE_SUBJECT_CODE") ENABLE;
 
  ALTER TABLE "ROOT"."LECTURE" ADD CONSTRAINT "FK_SEASON_TO_LE" FOREIGN KEY ("SEASON_ID")
	  REFERENCES "ROOT"."SEASON" ("SEASON_ID") ENABLE;




/* 수업시간표 */
  CREATE TABLE "ROOT"."LECTURE_TIMETABLE" 
   (	"LECTURE_DAY" VARCHAR2(10 BYTE), 
	"LECTURE_CODE" VARCHAR2(20 BYTE), 
	"LECTURE_SEASON_ID" VARCHAR2(20 BYTE), 
	"LECTURE_ALLOCATION_TIME" VARCHAR2(20 BYTE), 
	"LECTURE_START_TIME" VARCHAR2(20 BYTE), 
	"LECTURE_END_TIME" VARCHAR2(20 BYTE), 
	"LECTURE_TIMETABLE_NO" NUMBER
   ) ;

CREATE UNIQUE INDEX "ROOT"."PK_LECTURE_TIMETABLE" ON "ROOT"."LECTURE_TIMETABLE" ("LECTURE_DAY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

  CREATE UNIQUE INDEX "ROOT"."LECTURE_TIMETABLE_PK" ON "ROOT"."LECTURE_TIMETABLE" ("LECTURE_TIMETABLE_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

 ALTER TABLE "ROOT"."LECTURE_TIMETABLE" ADD CONSTRAINT "LECTURE_TIMETABLE_PK" PRIMARY KEY ("LECTURE_TIMETABLE_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."LECTURE_TIMETABLE" MODIFY ("LECTURE_DAY" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE_TIMETABLE" MODIFY ("LECTURE_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE_TIMETABLE" MODIFY ("LECTURE_SEASON_ID" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE_TIMETABLE" MODIFY ("LECTURE_ALLOCATION_TIME" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE_TIMETABLE" MODIFY ("LECTURE_START_TIME" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE_TIMETABLE" MODIFY ("LECTURE_END_TIME" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."LECTURE_TIMETABLE" MODIFY ("LECTURE_TIMETABLE_NO" NOT NULL ENABLE);

  ALTER TABLE "ROOT"."LECTURE_TIMETABLE" ADD CONSTRAINT "FK_LECTURE_TO_LE_TE" FOREIGN KEY ("LECTURE_CODE")
	  REFERENCES "ROOT"."LECTURE" ("LECTURE_CODE") ON DELETE CASCADE ENABLE;

/* 출결상태 */
 CREATE TABLE "ROOT"."ATTENDANCE_STATE" 
   (	"ATTENDANCE_STATE_CODE" VARCHAR2(20 BYTE), 
	"ATTENDANCE_STATE_NAME" VARCHAR2(20 BYTE)
   ) ;

  CREATE UNIQUE INDEX "ROOT"."PK_ATTANDANCE_STATE" ON "ROOT"."ATTENDANCE_STATE" ("ATTENDANCE_STATE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

  ALTER TABLE "ROOT"."ATTENDANCE_STATE" ADD CONSTRAINT "PK_ATTANDANCE_STATE" PRIMARY KEY ("ATTENDANCE_STATE_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."ATTENDANCE_STATE" MODIFY ("ATTENDANCE_STATE_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."ATTENDANCE_STATE" MODIFY ("ATTENDANCE_STATE_NAME" NOT NULL ENABLE);

/* 출결 */
  CREATE TABLE "ROOT"."ATTENDANCE" 
   (	"ATTENDANCE_NO" NUMBER, 
	"USER_ID" VARCHAR2(20 BYTE), 
	"ATTENDANCE_STATE_CODE" VARCHAR2(20 BYTE), 
	"ATTENDANCE_COME_TIME" DATE, 
	"ATTENDANCE_GO_TIME" DATE
   ) ;

  CREATE UNIQUE INDEX "ROOT"."PK_ATTANDANCE" ON "ROOT"."ATTENDANCE" ("ATTENDANCE_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

 ALTER TABLE "ROOT"."ATTENDANCE" ADD CONSTRAINT "PK_ATTANDANCE" PRIMARY KEY ("ATTENDANCE_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."ATTENDANCE" MODIFY ("ATTENDANCE_NO" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."ATTENDANCE" MODIFY ("USER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."ATTENDANCE" MODIFY ("ATTENDANCE_STATE_CODE" NOT NULL ENABLE);


  ALTER TABLE "ROOT"."ATTENDANCE" ADD CONSTRAINT "FK_ACADEMY_USER_TO_AE" FOREIGN KEY ("USER_ID")
	  REFERENCES "ROOT"."ACADEMY_USER" ("USER_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "ROOT"."ATTENDANCE" ADD CONSTRAINT "FK_ATTANDANCE_STATE_TO_AE" FOREIGN KEY ("ATTENDANCE_STATE_CODE")
	  REFERENCES "ROOT"."ATTENDANCE_STATE" ("ATTENDANCE_STATE_CODE") ENABLE;


/* 경력 */
  CREATE TABLE "ROOT"."CAREER" 
   (	"CAREER_NO" NUMBER, 
	"USER_ID" VARCHAR2(20 BYTE), 
	"CAREER_PERIOD" VARCHAR2(30 BYTE), 
	"CAREER_LOCATION" VARCHAR2(20 BYTE), 
	"CAREER_CONTENT" VARCHAR2(100 BYTE), 
	"ACADEMIC_BACKGROUND" VARCHAR2(50 BYTE)
   );



  CREATE UNIQUE INDEX "ROOT"."PK_CAREER" ON "ROOT"."CAREER" ("CAREER_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;


ALTER TABLE "ROOT"."CAREER" ADD CONSTRAINT "PK_CAREER" PRIMARY KEY ("CAREER_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."CAREER" MODIFY ("CAREER_NO" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."CAREER" MODIFY ("USER_ID" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."CAREER" MODIFY ("CAREER_PERIOD" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."CAREER" MODIFY ("CAREER_LOCATION" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."CAREER" MODIFY ("CAREER_CONTENT" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."CAREER" MODIFY ("ACADEMIC_BACKGROUND" NOT NULL ENABLE);

  ALTER TABLE "ROOT"."CAREER" ADD CONSTRAINT "FK_ACADEMY_USER_TO_CAREER" FOREIGN KEY ("USER_ID")
	  REFERENCES "ROOT"."ACADEMY_USER" ("USER_ID") ON DELETE CASCADE ENABLE;



/* 결재 */
 CREATE TABLE APPROVAL
   (	"APPROVAL_NO" VARCHAR2(20 BYTE), 
	"APPROVAL_TYPE_CODE" VARCHAR2(20 BYTE), 
	"APPROVAL_STATE_CODE" VARCHAR2(20 BYTE), 
	"USER_ID" VARCHAR2(20 BYTE), 
	"APPROVAL_CONTENT" VARCHAR2(200 BYTE), 
	"APPROVAL_REGISTER_DATE" DATE
   );


  CREATE UNIQUE INDEX "ROOT"."PK_APPROVAL" ON "ROOT"."APPROVAL" ("APPROVAL_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;


ALTER TABLE "ROOT"."APPROVAL" ADD CONSTRAINT "PK_APPROVAL" PRIMARY KEY ("APPROVAL_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."APPROVAL" MODIFY ("APPROVAL_NO" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."APPROVAL" MODIFY ("APPROVAL_TYPE_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."APPROVAL" MODIFY ("APPROVAL_STATE_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."APPROVAL" MODIFY ("APPROVAL_CONTENT" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."APPROVAL" MODIFY ("APPROVAL_REGISTER_DATE" NOT NULL ENABLE);

/* 결재종류 */
 CREATE TABLE APPROVAL_TYPE
   (	"APPROVAL_TYPE_CODE" VARCHAR2(20 BYTE), 
	"APPROVAL_TYPE_NAME" VARCHAR2(20 BYTE)
   ) ;



  CREATE UNIQUE INDEX "ROOT"."PK_APPROVAL_TYPE" ON "ROOT"."APPROVAL_TYPE" ("APPROVAL_TYPE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;


  ALTER TABLE "ROOT"."APPROVAL_TYPE" ADD CONSTRAINT "PK_APPROVAL_TYPE" PRIMARY KEY ("APPROVAL_TYPE_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ROOT"."APPROVAL_TYPE" MODIFY ("APPROVAL_TYPE_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."APPROVAL_TYPE" MODIFY ("APPROVAL_TYPE_NAME" NOT NULL ENABLE);



/* 결재상태 */
  CREATE TABLE APPROVAL_STATE
   (	"APPROVAL_STATE_CODE" VARCHAR2(20 BYTE), 
	"APPROVAL_STATE_NAME" VARCHAR2(20 BYTE)
   );


  CREATE UNIQUE INDEX "ROOT"."PK_APPROVAL_STATE" ON "ROOT"."APPROVAL_STATE" ("APPROVAL_STATE_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;


ALTER TABLE "ROOT"."APPROVAL_STATE" ADD CONSTRAINT "PK_APPROVAL_STATE" PRIMARY KEY ("APPROVAL_STATE_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 

  ALTER TABLE "ROOT"."APPROVAL_STATE" MODIFY ("APPROVAL_STATE_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "ROOT"."APPROVAL_STATE" MODIFY ("APPROVAL_STATE_NAME" NOT NULL ENABLE);


  ALTER TABLE "ROOT"."APPROVAL" ADD CONSTRAINT "FK_ACADEMY_USER_AL" FOREIGN KEY ("USER_ID")
	  REFERENCES "ROOT"."ACADEMY_USER" ("USER_ID") ON DELETE CASCADE ENABLE;
 
  ALTER TABLE "ROOT"."APPROVAL" ADD CONSTRAINT "FK_APPROVAL_STATE_AL" FOREIGN KEY ("APPROVAL_STATE_CODE")
	  REFERENCES "ROOT"."APPROVAL_STATE" ("APPROVAL_STATE_CODE") ENABLE;
 
  ALTER TABLE "ROOT"."APPROVAL" ADD CONSTRAINT "FK_APPROVAL_TYPE_TO_AL" FOREIGN KEY ("APPROVAL_TYPE_CODE")
	  REFERENCES "ROOT"."APPROVAL_TYPE" ("APPROVAL_TYPE_CODE") ENABLE;

/* 게시글 임시저장 */
CREATE TABLE TEMPORARY (
	TEMPORARY_NO NUMBER NOT NULL, /* 임시저장번호 */
	BOARD_NO NUMBER NOT NULL, /* 게시판번호 */
	USER_ID VARCHAR2(20) NOT NULL, /* 사용자ID (학생은 학번) */
	TEMPORARY_TITLE VARCHAR2(100), /* 임시저장 제목 */
	TEMPORARY_CONTENTS CLOB, /* 임시저장 본문 */
	TEMPORARY_DATE VARCHAR2(25) NOT NULL /* 임시저장 날짜 */
);

CREATE UNIQUE INDEX PK_TEMPORARY
	ON TEMPORARY (
		TEMPORARY_NO ASC
	);

ALTER TABLE TEMPORARY
	ADD
		CONSTRAINT PK_TEMPORARY
		PRIMARY KEY (
			TEMPORARY_NO
		);

/* 댓글 */
CREATE TABLE BOARD_COMMENT (
	COMMENT_NO NUMBER NOT NULL, /* 댓글번호 */
	POST_NO NUMBER NOT NULL, /* 게시글번호 */
	USER_ID VARCHAR2(20) NOT NULL, /* 사용자ID (학생은 학번) */
	COMMENT_CONTENT VARCHAR2(1000), /* 댓글내용 */
	COMMENT_DATE VARCHAR(25) NOT NULL, /* 댓글 작성일 */
	COMMENT_IMAGE VARCHAR2(200), /* 댓글,답글 - 사진 */
	COMMENT_RE_PARENT NUMBER /* 답글-부모글번호 */
);

CREATE UNIQUE INDEX PK_BOARD_COMMENT
	ON BOARD_COMMENT (
		COMMENT_NO ASC
	);

ALTER TABLE BOARD_COMMENT
	ADD
		CONSTRAINT PK_BOARD_COMMENT
		PRIMARY KEY (
			COMMENT_NO
		);

/* 게시판그룹 */
CREATE TABLE BOARD_GROUP (
	BOARD_GROUP_NO NUMBER NOT NULL, /* 게시판 그룹 번호 */
	LECTURE_CODE VARCHAR2(20), /* 강의코드 */
	BOARD_GROUP_NAME VARCHAR2(50) NOT NULL, /* 게시판 그룹 이름 */
	BOARD_GROUP_ORDER NUMBER NOT NULL /* 게시판 그룹 순서 */
);

CREATE UNIQUE INDEX PK_BOARD_GROUP
	ON BOARD_GROUP (
		BOARD_GROUP_NO ASC
	);

ALTER TABLE BOARD_GROUP
	ADD
		CONSTRAINT PK_BOARD_GROUP
		PRIMARY KEY (
			BOARD_GROUP_NO
		);

/* 게시글 */
CREATE TABLE POSTS (
	POST_NO NUMBER NOT NULL, /* 게시글번호 */
	BOARD_NO NUMBER NOT NULL, /* 게시판번호 */
	USER_ID VARCHAR2(20) NOT NULL, /* 사용자ID (학생은 학번) */
	POST_TITLE VARCHAR2(100), /* 게시글 제목 */
	POST_PREVIEW VARCHAR(400), /* 게시글 미리보기*/
	POST_THUMBNAIL VARCHAR(100),
	POST_CONTENTS CLOB, /* 게시글 내용 */
	POSTS_DATE VARCHAR(25) NOT NULL, /* 게시글 작성일 */
	POST_VIEWS NUMBER /* 게시글 조회수 */
);

CREATE UNIQUE INDEX PK_POSTS
	ON POSTS (
		POST_NO ASC
	);

ALTER TABLE POSTS
	ADD
		CONSTRAINT PK_POSTS
		PRIMARY KEY (
			POST_NO
		);

/* 게시판 */
CREATE TABLE BOARD (
	BOARD_NO NUMBER NOT NULL, /* 게시판번호 */
	BOARD_GROUP_NO NUMBER NOT NULL, /* 게시판 그룹 번호 */
	BOARD_NAME VARCHAR2(50) NOT NULL, /* 게시판이름 */
	BOARD_INTRO VARCHAR2(80), /* 게시판 소개글 */
	BOARD_ORDER NUMBER NOT NULL /* 게시판순서 */
);

CREATE UNIQUE INDEX PK_BOARD
	ON BOARD (
		BOARD_NO ASC
	);

ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			BOARD_NO
		);

/* 신청서의 신청자 정보 (수동입력) */
CREATE TABLE APPLICATION_FORM (
	COMPANYPAY_BUSINESS_NO VARCHAR2(20) NOT NULL, /* 학원 사업자 번호(이걸로 확인) */
	ADMIN_ID VARCHAR2(20), /* 관리자ID */
	COMPANYPAY_NO VARCHAR2(20) NOT NULL, /* 계좌번호 */
	COMPANYPAY_BANK VARCHAR2(20), /* 입금은행 */
	COMPANYPAY_NAME VARCHAR2(20) NOT NULL, /* 예금주명 */
	COMPANYPAY_ID VARCHAR2(20), /* 희망 아이디 */
	COMPANYPAY_PASSWORD VARCHAR2(20), /* 희망 비밀번호 */
	COMPANYPAY_MANAGER VARCHAR2(20), /* 학원대표자명(원장) */
	COMPANYPAY_ACADEMY VARCHAR2(20), /* 학원명 */
	COMPANYPAY_ACADEMYPHONE VARCHAR2(20), /* 학원 전화번호 */
	COMPANYPAY_BIRTH VARCHAR2(20), /* 고객 생년원일 (950623) */
	COMPANYPAY_ADDRESS VARCHAR2(200), /* 학원 주소 */
	COMPANYPAY_EMAIL VARCHAR2(20), /* 학원 이메일 */
	COMPANYPAY_APPLICANT VARCHAR2(20), /* 신청자 */
	COMPANYPAY_PHONE VARCHAR2(20), /* 연락처 */
	COMPANYPAY_APPLICATIONFORM VARCHAR2(50), /* 신청서(.hwp) */
	COMPANYPAY_APPLICATIONDATE DATE, /* 신청일 */
	COMPANYPAY_PAYMENTDATE DATE /* 결제일 */
);

CREATE UNIQUE INDEX PK_APPLICATION_FORM
	ON APPLICATION_FORM (
		COMPANYPAY_BUSINESS_NO ASC
	);

ALTER TABLE APPLICATION_FORM
	ADD
		CONSTRAINT PK_APPLICATION_FORM
		PRIMARY KEY (
			COMPANYPAY_BUSINESS_NO
		);

/* 문의 게시판 (회사 홈페이지 방문자 누구나 이용가능) */
CREATE TABLE INQUIRY (
	INQUIRY_NO NUMBER NOT NULL, /* 문의게시판 번호 */
	ADMIN_ID VARCHAR2(20), /* 관리자ID */
	INQUIRY_NAME VARCHAR2(20), /* 작성자(문의하는사람) */
	INQUIRY_PASSWORD VARCHAR2(20) NOT NULL, /* 문의글 비밀번호 */
	INQUIRY_TITLE VARCHAR2(50) NOT NULL, /* 문의 제목 */
	INQUIRY_CONTENT VARCHAR2(200), /* 문의 내용 */
	INQUIRY_DATE DATE, /* 문의글 작성일자 */
	INQUIRY_ANSWER VARCHAR2(200) /* 문의글 - 답글 */
);

CREATE UNIQUE INDEX PK_INQUIRY
	ON INQUIRY (
		INQUIRY_NO ASC
	);

ALTER TABLE INQUIRY
	ADD
		CONSTRAINT PK_INQUIRY
		PRIMARY KEY (
			INQUIRY_NO
		);

/* 결제종류 */
CREATE TABLE PAYMENT_TYPE (
	PAYMENT_NO NUMBER NOT NULL, /* 결제종류번호 */
	PAYMENT_TYPE VARCHAR2(20) /* 결제종류 (카카오페이/계좌이체/자동이체) */
);

CREATE UNIQUE INDEX PK_PAYMENT_TYPE
	ON PAYMENT_TYPE (
		PAYMENT_NO ASC
	);

ALTER TABLE PAYMENT_TYPE
	ADD
		CONSTRAINT PK_PAYMENT_TYPE
		PRIMARY KEY (
			PAYMENT_NO
		);

/* 관리자 (문의게시판용) */
CREATE TABLE ADMIN (
	ADMIN_ID VARCHAR2(20) NOT NULL, /* 관리자ID */
	ADMIN_PASSWORD VARCHAR2(20), /* 관리자비밀번호 */
	ADMIN_NAME VARCHAR2(20), /* 관리자이름 */
	ADMIN_BIRTH VARCHAR2(20), /* 관리자 생년월일 */
	ADMIN_PHONE VARCHAR2(20) /* 관리자 핸드폰번호 */
);

CREATE UNIQUE INDEX PK_ADMIN
	ON ADMIN (
		ADMIN_ID ASC
	);

ALTER TABLE ADMIN
	ADD
		CONSTRAINT PK_ADMIN
		PRIMARY KEY (
			ADMIN_ID
		);

/* 서비스 결제 */
CREATE TABLE PAYMENT_SERVICE (
	COMPANYPAY_BUSINESS_NO VARCHAR2(20) NOT NULL, /* 학원 사업자 번호(이걸로 확인) */
	PAYMENT_NO NUMBER, /* 결제종류번호 */
	SERVICE_NAME VARCHAR2(20) NOT NULL, /* 결제자 (비회원이라 이름이 들어감) */
	SERVICE_PAYMENTDATE DATE /* 결제일 */
);

CREATE UNIQUE INDEX PK_PAYMENT_SERVICE
	ON PAYMENT_SERVICE (
		COMPANYPAY_BUSINESS_NO ASC
	);

ALTER TABLE PAYMENT_SERVICE
	ADD
		CONSTRAINT PK_PAYMENT_SERVICE
		PRIMARY KEY (
			COMPANYPAY_BUSINESS_NO
		);



/* 학원비결제(수입) */
CREATE TABLE ACADEMY_PAYMENT (
	PAYMENT_NO NUMBER NOT NULL, /* 결제번호 */
	PAYMENT_METHOD_NO NUMBER NOT NULL, /* 결제수단번호 */
	USER_ID VARCHAR2(20) NOT NULL, /* 사용자ID (학생은 학번) */
	LECTURE_CODE VARCHAR2(20) NOT NULL,
	PAYMENT_DATE DATE NOT NULL /* 결제일 */
);

CREATE UNIQUE INDEX PK_ACADEMY_PAYMENT
	ON ACADEMY_PAYMENT (
		PAYMENT_NO ASC
	);

ALTER TABLE ACADEMY_PAYMENT
	ADD
		CONSTRAINT PK_ACADEMY_PAYMENT
		PRIMARY KEY (
			PAYMENT_NO
		);

/* 결제수단 */
CREATE TABLE PAYMENT_METHOD (
	PAYMENT_METHOD_NO NUMBER NOT NULL, /* 결제수단번호 */
	PAYMENT_METHOD VARCHAR2(5), /* 결제수단 */
	ONOFF_PAYMENT_NO NUMBER NOT NULL, /* 온오프라인 결제번호 */
	ONOFF_PAYMENT VARCHAR2(4) /* 온오프라인 결제 */
);

CREATE UNIQUE INDEX PK_PAYMENT_METHOD
	ON PAYMENT_METHOD (
		PAYMENT_METHOD_NO ASC
	);

ALTER TABLE PAYMENT_METHOD
	ADD
		CONSTRAINT PK_PAYMENT_METHOD
		PRIMARY KEY (
			PAYMENT_METHOD_NO
		);

/* 지출 */
CREATE TABLE EXPENDITURE (
	EXPENDITURE_NO NUMBER NOT NULL, /* 지출번호 */
	USER_ID VARCHAR2(20), /* 사용자ID (학생은 학번) */
	EXPENDITURE_CONTENTS VARCHAR2(20), /* 지출용도 */
	EXPENDITURE_DATE DATE, /* 지출일 */
	EXPENDITURE_PERSON VARCHAR2(10) /* 지출자 */
);

CREATE UNIQUE INDEX PK_EXPENDITURE
	ON EXPENDITURE (
		EXPENDITURE_NO ASC
	);

ALTER TABLE EXPENDITURE
	ADD
		CONSTRAINT PK_EXPENDITURE
		PRIMARY KEY (
			EXPENDITURE_NO
		);

/* 변동지출 */
CREATE TABLE VARIABLE_EXPENDITURE (
	VARIABLE_EXPENDITURE_NO NUMBER NOT NULL, /* 지출번호 */
	EQUIPMENT_NO NUMBER NOT NULL, /* 품목번호 */
	VARIABLE_CATEGORY_NO NUMBER NOT NULL, /* 변동지출 카테고리 번호 */
	VARIABLE_EXPENDITURE NUMBER NOT NULL /* 변동지출 금액 */
);

/* 고정지출 */
CREATE TABLE FIXED_EXPENDITURE (
	FIXED_EXPENDITURE_NO NUMBER NOT NULL, /* 지출번호 */
	EXPENDITURE_NO NUMBER,
	FIXED_CATEGORY_NO NUMBER NOT NULL, /* 고정지출 카테고리 번호 */
	FIXED_EXPENDITURE NUMBER NOT NULL /* 고정지출 금액 */
);

/* 구매처 */
CREATE TABLE SUPPLIER (
	SUPPLIER_NO NUMBER NOT NULL, /* 구매처 번호 */
	SUPPLIER_NAME VARCHAR2(20), /* 구매처 명 */
	SUPPLIER_ADDRESS VARCHAR2(200), /* 구매처 주소 */
	SUPPLIER_TEL NUMBER, /* 구매처 전화번호 */
	SUPPLIER_DATE DATE /* 구매처 등록일 */
);

CREATE UNIQUE INDEX PK_SUPPLIER
	ON SUPPLIER (
		SUPPLIER_NO ASC
	);

ALTER TABLE SUPPLIER
	ADD
		CONSTRAINT PK_SUPPLIER
		PRIMARY KEY (
			SUPPLIER_NO
		);

/* 구매처별 제품 분류 */
CREATE TABLE SUPPLIER_EQUIPMENT (
	EQUIPMENT_NO NUMBER NOT NULL, /* 품목번호 */
	SUPPLIER_NO NUMBER, /* 구매처 번호 */
	EQUIPMENT_NAME VARCHAR2(50), /* 품목명 */
	MANUFACTURED_BY VARCHAR2(20), /* 제조사 */
	EQUIPMENT_UNIT VARCHAR2(10), /* 단위 */
	EQUIPMENT_UNIT_PRICE NUMBER, /* 단가 */
	EQUIPMENT_COUNT NUMBER /* 재고량 */
);

CREATE UNIQUE INDEX PK_SUPPLIER_EQUIPMENT
	ON SUPPLIER_EQUIPMENT (
		EQUIPMENT_NO ASC
	);

ALTER TABLE SUPPLIER_EQUIPMENT
	ADD
		CONSTRAINT PK_SUPPLIER_EQUIPMENT
		PRIMARY KEY (
			EQUIPMENT_NO
		);

/* 변동지출 카테고리 */
CREATE TABLE VARIABLE_CATEGORY (
	VARIABLE_CATEGORY_NO NUMBER NOT NULL, /* 변동지출 카테고리 번호 */
	VARIABLE_CATEGORY_NAME VARCHAR2(20) NOT NULL, /* 카테고리 명 */
	VARIABLE_PARENT_NO NUMBER /* 상위 카테고리 번호 */
);

CREATE UNIQUE INDEX PK_VARIABLE_CATEGORY
	ON VARIABLE_CATEGORY (
		VARIABLE_CATEGORY_NO ASC
	);

ALTER TABLE VARIABLE_CATEGORY
	ADD
		CONSTRAINT PK_VARIABLE_CATEGORY
		PRIMARY KEY (
			VARIABLE_CATEGORY_NO
		);

/* 고정지출 카테고리 */
CREATE TABLE FIXED_CATEGORY (
	FIXED_CATEGORY_NO NUMBER NOT NULL, /* 고정지출 카테고리 번호 */
	FIXED_CATEGORY_NAME VARCHAR2(20) NOT NULL, /* 고정지출 카테고리 명 */
	FIXED_PARENT_NO NUMBER /* 상위 카테고리 번호 */
);

CREATE UNIQUE INDEX PK_FIXED_CATEGORY
	ON FIXED_CATEGORY (
		FIXED_CATEGORY_NO ASC
	);



ALTER TABLE FIXED_CATEGORY
	ADD
		CONSTRAINT PK_FIXED_CATEGORY_TO_FC
		PRIMARY KEY (
			FIXED_CATEGORY_NO
		);

ALTER TABLE ACADEMY_USER
	ADD
		CONSTRAINT FK_AUTHORITY_USER_TO_AU
		FOREIGN KEY (
			AUTHORITY_CODE
		)
		REFERENCES AUTHORITY (
			AUTHORITY_CODE
		)
		ON DELETE CASCADE;

ALTER TABLE ACADEMY_USER
	ADD
		CONSTRAINT FK_ACADEMIC_TYPE_USER_TO_AU
		FOREIGN KEY (
			ACADEMIC_TYPE_CODE
		)
		REFERENCES ACADEMIC_TYPE (
			ACADEMIC_TYPE_CODE
		)
		ON DELETE CASCADE;




ALTER TABLE TEST
	ADD
		CONSTRAINT FK_TEST_TYPE_TO_TEST
		FOREIGN KEY (
			TEST_KIND_CODE
		)
		REFERENCES TEST_TYPE (
			TEST_KIND_CODE
		);

ALTER TABLE CALENDAR
	ADD
		CONSTRAINT FK_CALENDAR_TYPE_TO_CR
		FOREIGN KEY (
			CALENDAR_SPACIFICATION_CODE
		)
		REFERENCES CALENDAR_TYPE (
			CALENDAR_SPACIFICATION_CODE
		);

ALTER TABLE CALENDAR
	ADD
		CONSTRAINT FK_ACADEMY_USER_TO_CR
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES ACADEMY_USER (
			USER_ID
		)
		ON DELETE CASCADE;






ALTER TABLE TEMPORARY
	ADD
		CONSTRAINT FK_BOARD_TO_TEMP
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES BOARD (
			BOARD_NO
		)
		ON DELETE CASCADE;

ALTER TABLE TEMPORARY
	ADD
		CONSTRAINT FK_ACADEMY_TO_USER_TEMP
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES ACADEMY_USER (
			USER_ID
		)
		ON DELETE CASCADE;

ALTER TABLE BOARD_COMMENT
	ADD
		CONSTRAINT FK_POSTS_TO_BD_CT
		FOREIGN KEY (
			POST_NO
		)
		REFERENCES POSTS (
			POST_NO
		)
		ON DELETE CASCADE;

ALTER TABLE BOARD_COMMENT
	ADD
		CONSTRAINT FK_ACADEMY_USER_TO_BD_CT
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES ACADEMY_USER (
			USER_ID
		)
		ON DELETE CASCADE;

ALTER TABLE BOARD_GROUP
	ADD
		CONSTRAINT FK_LECTURE_TO_BD_GP
		FOREIGN KEY (
			LECTURE_CODE
		)
		REFERENCES LECTURE (
			LECTURE_CODE
		)
		ON DELETE CASCADE;

ALTER TABLE POSTS
	ADD
		CONSTRAINT FK_BOARD_TO_PS
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES BOARD (
			BOARD_NO
		)
		ON DELETE CASCADE;

ALTER TABLE POSTS
	ADD
		CONSTRAINT FK_ACADEMY_USER_TO_PS
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES ACADEMY_USER (
			USER_ID
		)
		ON DELETE CASCADE;

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_BOARD_GROUP_TO_BD
		FOREIGN KEY (
			BOARD_GROUP_NO
		)
		REFERENCES BOARD_GROUP (
			BOARD_GROUP_NO
		)
		ON DELETE CASCADE;

ALTER TABLE APPLICATION_FORM
	ADD
		CONSTRAINT FK_ADMIN_TO_AN_FM
		FOREIGN KEY (
			ADMIN_ID
		)
		REFERENCES ADMIN (
			ADMIN_ID
		);

ALTER TABLE INQUIRY
	ADD
		CONSTRAINT FK_ADMIN_TO_IY
		FOREIGN KEY (
			ADMIN_ID
		)
		REFERENCES ADMIN (
			ADMIN_ID
		);

ALTER TABLE PAYMENT_SERVICE
	ADD
		CONSTRAINT FK_PAYMENT_TYPE_TO_PT_SE
		FOREIGN KEY (
			PAYMENT_NO
		)
		REFERENCES PAYMENT_TYPE (
			PAYMENT_NO
		);

ALTER TABLE PAYMENT_SERVICE
	ADD
		CONSTRAINT FK_APPLICATION_FORM_TO_PS
		FOREIGN KEY (
			COMPANYPAY_BUSINESS_NO
		)
		REFERENCES APPLICATION_FORM (
			COMPANYPAY_BUSINESS_NO
		);


ALTER TABLE ACADEMY_PAYMENT
	ADD
		CONSTRAINT FK_PAYMENT_METHOD_TO_AY_PT
		FOREIGN KEY (
			PAYMENT_METHOD_NO
		)
		REFERENCES PAYMENT_METHOD (
			PAYMENT_METHOD_NO
		);

ALTER TABLE ACADEMY_PAYMENT
	ADD
		CONSTRAINT FK_ACADEMY_USER_TO_AY_PT
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES ACADEMY_USER (
			USER_ID
		);


ALTER TABLE ACADEMY_PAYMENT
	ADD
		CONSTRAINT FK_LECTURE_TO_AY_PT
		FOREIGN KEY (
			LECTURE_CODE
		)
		REFERENCES LECTURE (
			LECTURE_CODE
		);


ALTER TABLE EXPENDITURE
	ADD
		CONSTRAINT FK_ACADEMY_USER_TO_EX
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES ACADEMY_USER (
			USER_ID
		);

ALTER TABLE VARIABLE_EXPENDITURE
	ADD
		CONSTRAINT FK_EXPENDITURE_TO_VA_EX
		FOREIGN KEY (
			EXPENDITURE_NO
		)
		REFERENCES EXPENDITURE (
			EXPENDITURE_NO
		);

ALTER TABLE VARIABLE_EXPENDITURE
	ADD
		CONSTRAINT FK_SUPPLIER_EQUIPMENT_TO_VA_EX
		FOREIGN KEY (
			EQUIPMENT_NO
		)
		REFERENCES SUPPLIER_EQUIPMENT (
			EQUIPMENT_NO
		);

ALTER TABLE VARIABLE_EXPENDITURE
	ADD
		CONSTRAINT FK_VARIABLE_CATEGORY_TO_VA_EX
		FOREIGN KEY (
			VARIABLE_CATEGORY_NO
		)
		REFERENCES VARIABLE_CATEGORY (
			VARIABLE_CATEGORY_NO
		);

ALTER TABLE FIXED_EXPENDITURE
	ADD
		CONSTRAINT FK_EXPENDITURE_TO_FIX_EX
		FOREIGN KEY (
			EXPENDITURE_NO
		)
		REFERENCES EXPENDITURE (
			EXPENDITURE_NO
		);

ALTER TABLE FIXED_EXPENDITURE
	ADD
		CONSTRAINT FK_FIXED_CATEGORY_TO_FIX_EX
		FOREIGN KEY (
			FIXED_CATEGORY_NO
		)
		REFERENCES FIXED_CATEGORY (
			FIXED_CATEGORY_NO
		);

ALTER TABLE SUPPLIER_EQUIPMENT
	ADD
		CONSTRAINT FK_SUPPLIER_TO_SUP_EQ
		FOREIGN KEY (
			SUPPLIER_NO
		)
		REFERENCES SUPPLIER (
			SUPPLIER_NO
		);


commit;


